
Parallel Stream in Java
===========================

Коли створюємо потік за допомогою Java Stream API,
за умовчанням це завжди послідовний потік.

Також можна створити ПАРАЛЕЛЬНИЙ потік у Java
для паралельного виконання потоку.
У цьому випадку середовище виконання Java розділяє потік
на КІЛЬКА ПІДПОТОКІВ.

Агрегатні операції перебирають та обробляють
ці підпотоки паралельно, а потім об'єднують
результати.


Особливості паралельного потоку
------------------------------------
Коли використовується паралельний потік кілька
підпотоків обробляються паралельно окремими
потоками, а РЕЗУЛЬТАТИ об'єднуються ПІЗНІШЕ.

За замовчуванням обробка в паралельному потоці
використовує ЗАГАЛЬНИЙ ПУЛ потоків для отримання
потоків.

ОПЕРАЦІЇ, що застосовуються до паралельного потоку,
НЕ ПОВИННІ мати стан і не повинні заважати.

Паралельні потоки ДОЗВОЛЯЮТЬ РЕАЛІЗУВАТИ
паралелізм із колекціями, не орієнтованими
на багатопотокове виконання, за умови, що
не змінюємо колекцію під час роботи з нею.
Будь-яка загальна змінна також не повинна оновлюватись
будь-якою операцією в паралельному потоці.

Паралелізм НЕ Є автоматично швидшим,
ніж послідовне виконання операцій, хоча це
можливо, якщо достатньо даних і процесорних
ядер.


РЕСУРСИ
https://www.baeldung.com/java-when-to-use-parallel-stream

