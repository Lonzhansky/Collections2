
Interface Queue<E> – черга (колекція), що використовується
для зберігання декількох елементів перед обробкою.
Е - тип елементів, що містяться в цій колекції.
Черга - структура даних, в якій елементи додаються
з одного кінця, а видаляються з іншого кінця.
Окрім основних операцій Interface Collection, черги забезпечують
додаткові операції вставки, вилучення та перевірки.
https://docs.oracle.com/javase/8/docs/api/java/util/Queue.html

Інтерфейс Queue упорядковує елемент у порядку
FIFO (першим прийшов – першим пішов).
При FIFO, перший елемент видаляється першим, а останній
елемент видаляється наприкінці.


Популярні реалізації
------------------------
Class LinkedList, Class ArrayDeque, Class PriorityQueue.


Внутрішня структура
-----------------------
Class LinkedList використовує двонаправлений список.
Class ArrayDeque використовує масив зі змінним розміром
для зберігання елементів.
Class PriorityQueue використовує масив зі змінним розміром
для зберігання елементів та Comparator для розміщення елементів
у певному порядку.


Interface Comparator<T> - функція порівняння, яка накладає загальне
впорядкування на деяку колекцію об’єктів. Компаратори можна передати
в метод сортування (наприклад, Collections.sort або Arrays.sort), щоб
забезпечити точний контроль над порядком сортування.
Компаратори також можна використовувати для керування порядком певних
структур даних (наприклад, SortedSet або SortedMap) або для забезпечення
порядку для колекцій об’єктів, які не мають природного порядку.
https://docs.oracle.com/javase/8/docs/api/java/util/Comparator.html


null елементи
----------------
Class LinkedList: не дозволено
Class ArrayDeque: не дозволено
Class PriorityQueue: не дозволено


Елементи, що дублюються
-------------------------
Class LinkedList: дозволено
Class ArrayDeque: дозволено
Class PriorityQueue: дозволено



Коли використати?
----------------------
Class LinkedList для динамічної черги (стеку), довжину якої
можна змінювати відповідно до вимог.
Class ArrayDeque можна використовувати як чергу (стек), особливо коли
потрібно додавати/видаляти з обох кінців колекції.
Class PriorityQueue, коли хочемо, щоб черга елементів розміщувалася
у певному порядку.

